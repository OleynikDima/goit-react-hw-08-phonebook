{"version":3,"sources":["components/Filter/style.module.scss","components/Form/style.module.scss","components/List/style.module.scss","images/pngegg.png","components/List/tramsition/pop.module.scss","View/Contact/style.module.scss","redux/contact/constSelector.js","components/Filter/index.js","redux/contact/contOperation.js","components/Form/index.js","components/List/index.js","View/Contact/index.js"],"names":["module","exports","getContactsItems","state","contacts","items","getFilter","filter","getContacts","getVisibleContacts","createSelector","contack","name","toLowerCase","includes","mapDispatchToProps","onChangeFindContact","contAction","changeFilter","connect","value","contSelector","className","style","filter__search","filter__input","type","onChange","e","target","token","axios","defaults","headers","common","Authorization","addTask","number","dispatch","contactAction","addItemRequest","post","then","res","addItemSuccess","data","catch","error","addItemError","fetchItems","getState","persistedToken","auth","fetchItemRequest","get","fetchItemSuccess","fetchItemError","removeItem","id","removeItemRequest","delete","removeItemSuccess","removeItemError","Form","handleChangeText","setState","handleChangeNumber","handleSubmit","preventDefault","props","onAddObj","this","container","form","onSubmit","form_label","form_input","form_button","disabled","isLoadingBtn","Component","constOperation","onDelete","contOperation","constSelector","TransitionGroup","component","list","map","contact","CSSTransition","key","in","timeout","classNames","popTransition","unmountOnExit","list__item","alt","src","foto","width","height","list__contact","list__name","list__btn","onClick","Contacts","isAuth","contactsFetch","history","replace","wrapper","mapDispatchProps","authSelector","onAuthUser"],"mappings":"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","file":"static/js/4.6c73b0c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"style_filter__3GF2l\",\"filter__input\":\"style_filter__input__3GdNe\",\"filter__search\":\"style_filter__search__3YcZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2Xh7w\",\"form\":\"style_form__2MFG6\",\"form_input\":\"style_form_input__3aSkS\",\"form_label\":\"style_form_label__2rZXN\",\"form_button\":\"style_form_button__V715X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__1wBvn\",\"list__item\":\"style_list__item__F4gP9\",\"list__name\":\"style_list__name__3V6gm\",\"list__contact\":\"style_list__contact__3zvWh\",\"list__btn\":\"style_list__btn__2iROF\"};","module.exports = __webpack_public_path__ + \"static/media/pngegg.7ea4af7d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3jcLu\",\"enterActive\":\"pop_enterActive__1-csK\",\"exit\":\"pop_exit__3sjCI\",\"exitActive\":\"pop_exitActive__h2MnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1AbaA\"};","import {createSelector} from '@reduxjs/toolkit';\n\n\n\nconst getContactsItems = state => state.contacts.items;\n\nconst getContacts = state => state.contacts; \n\n\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n    [getContactsItems,getFilter],\n    (items,filter)=>{\n        return items.filter(contack => contack.name.toLowerCase().includes(filter))\n});\n\nexport default {\n    getContactsItems,\n    getContacts,\n    getVisibleContacts,\n    getFilter\n}","import React from 'react'\nimport { connect } from 'react-redux';\nimport contSelector from '../../redux/contact/constSelector'\nimport contAction from '../../redux/contact/contAction';\nimport style from './style.module.scss'\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Filter =({value, onChangeFindContact}) => {\n \n        return (\n            <div className={style.filter}>\n                   <SearchIcon className={style.filter__search}/>\n                    <label>\n                        <input \n                            className={style.filter__input}\n                            value={value} \n                            type=\"text\" \n                            // placeholder=\"name\" \n                            onChange={e => onChangeFindContact(e.target.value)} \n                            />\n                    </label>\n            </div>\n        )\n    };\n\n\nconst mapStateToProps = state => ({\n    value:contSelector.getFilter(state),\n})\n\nconst mapDispatchToProps = {\n    onChangeFindContact:contAction.changeFilter\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\n   ","import axios from 'axios';\nimport contactAction from './contAction'\n\n// axios.defaults.baseUrl = 'https://goit-phonebook-api.herokuapp.com';\n// axios.defaults.baseURL = 'http://localhost:4000';\nconst token ={\n    set(token){\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset(){\n    axios.defaults.headers.common.Authorization = '';\n    }\n};\n\nconst addTask = ({name,number}) => dispatch => {\n    dispatch(contactAction.addItemRequest());\n\n    axios.post('/contacts', {name,number})\n    .then(res => {\n        dispatch(contactAction.addItemSuccess(res.data));\n    })\n    .catch(error => dispatch(contactAction.addItemError(error)));\n}\n\n\nconst fetchItems = () => (dispatch,getState) => {\n    const  {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if(!persistedToken){\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(contactAction.fetchItemRequest());\n    axios\n      .get('/contacts',)\n      .then((res => {\n\n        dispatch(contactAction.fetchItemSuccess(res.data))\n    }))\n      .catch(error => dispatch(contactAction.fetchItemError(error)))\n}\n\nconst removeItem = id => dispatch => {\n    dispatch(contactAction.removeItemRequest());\n    \n    axios\n      .delete(`/contacts/${id}`)\n      .then(()=> dispatch(contactAction.removeItemSuccess(id)))\n      .catch(error => dispatch(contactAction.removeItemError(error)))\n}\n\nexport default {\n    addTask,\n    fetchItems,\n    removeItem,\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport constOperation from '../../redux/contact/contOperation';\nimport style from './style.module.scss'\n\n\nclass Form extends Component {\n    state ={\n        name:'',\n        number:'',\n    }\n\n    handleChangeText = (e) => {\n        this.setState({name:e.target.value})\n    }    \n    handleChangeNumber = (e) => {\n        this.setState({number:e.target.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const {name, number } = this.state\n\n        this.props.onAddObj({name,number})\n\n        this.setState({name:'',number:''})\n    }\n\nrender(){\n    const {name,number} = this.state\n    return (\n        <div className={style.container}>\n        <form  className={style.form} onSubmit={this.handleSubmit} >\n        <label className={style.form_label}>Name\n            <input \n            className={style.form_input}\n            type=\"input\" \n            value={name}\n            onChange={this.handleChangeText}\n            // placeholder=\"please write name\"\n            />\n         </label>\n\n         <label className={style.form_label}> Number\n            <input \n            className={style.form_input}\n            type=\"input\" \n            value={number}\n            onChange={this.handleChangeNumber}\n            // placeholder=\"number phone\"\n            />\n         </label>\n\n\n         <button \n            className={style.form_button} \n            type=\"submit\"\n            disabled={!name || !number}\n            >\n                { this.props.isLoadingBtn === true ? `Loading ` : `Add contact`\n                } \n         </button>\n    </form>\n    </div>\n        \n    )\n  }\n}\n\nconst mapDispatchToProps = {\n    onAddObj:constOperation.addTask\n}\n\nexport default connect(null,mapDispatchToProps)(Form)","import React from 'react';\nimport { connect } from 'react-redux';\nimport constSelector from '../../redux/contact/constSelector';\nimport contOperation from '../../redux/contact/contOperation'\nimport style from './style.module.scss'\nimport foto from '../../images/pngegg.png'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { CSSTransition,TransitionGroup} from 'react-transition-group';\nimport popTransition from './tramsition/pop.module.scss'\n\nconst List = ({contacts,onDelete}) => {\n    return (\n        // <ul className={style.list}>\n        <TransitionGroup component=\"ul\" className={style.list}>\n        {  contacts.map(contact =>  {\n            return (\n                <CSSTransition\n                key={contact.id}\n                in={true}\n                timeout={500}\n                classNames={popTransition}\n                unmountOnExit>\n                 <li  className={style.list__item} key={contact.id}>\n                         <img  alt='avatar user'src={foto} width='30' height='30'/>\n                         <div className={style.list__contact}>\n                            <span className={style.list__name}> {contact.name} </span>\n                            <span>{contact.number} </span>\n                         </div>\n                 <button className={style.list__btn} onClick={()=>onDelete(contact.id)} type=\"submit\"> <DeleteForeverIcon /></button>\n                 </li>\n                 </CSSTransition>\n            )})\n            } \n            </TransitionGroup>\n        // </ul>\n    )\n}\nconst mapStatetoProps = (state)=> ({\n    contacts:constSelector.getVisibleContacts(state)\n\n})\n\nconst mapDispatchToProps = {\n    onDelete:contOperation.removeItem\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(List) \n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filter from '../../components/Filter';\nimport Form from '../../components/Form'\nimport List from '../../components/List'\nimport contOperation from '../../redux/contact/contOperation'\nimport authSelector from '../../redux/auth/authSelector';\nimport style from './style.module.scss'\n\nclass Contacts extends Component{\n    componentDidMount(){\n//if User do not login -> replace to login\n        if(!this.props.isAuth){\n            this.props.history.replace('/login');\n            return;\n        }\n        this.props.contactsFetch();\n    }\n\n    componentDidUpdate(){\n        if(!this.props.isAuth){\n            this.props.history.replace('/login');\n            return;\n        }\n\n    }\n    render(){\n    return (\n        <div className={style.wrapper}>\n            <div>\n            <Form/>\n            </div>\n            <div>\n                <Filter/>\n                <List/>\n            </div>\n        </div>\n    );\n   };\n};\n\n\nconst mapStateToProps = state => ({\n    isAuth:authSelector.onAuthUser(state),\n})\n\nconst mapDispatchProps = {\n    contactsFetch:contOperation.fetchItems,\n}\n  \n\nexport default connect(mapStateToProps,mapDispatchProps)(Contacts);"],"sourceRoot":""}